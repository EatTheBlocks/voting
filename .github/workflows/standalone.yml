name: Standalone Mode

on:
  push:
    branches: [ main ]

jobs:
  build-front:
    name: Build frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup node verison
        uses: actions/setup-node@v1
        with:
          node-version: '16'
      - name: Build website
        working-directory: frontend
        run: |
          yarn install
          yarn build
      - name: Cache result
        uses: actions/cache@v2
        with:
          key: ${{ github.sha }}
          path: frontend/dist

  build-back:
    name: Build backend
    needs: build-front
    runs-on: ubuntu-latest
    env:
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
      DOCKER_IMAGE: hub
      DOCKER_TAG: ${{ github.sha }}
      DOCKER_TARGET_PLATFORM: linux/amd64 # ,linux/386,linux/arm/v7,linux/arm64
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Docker login DigitalOcean
        run: doctl registry login --expiry-seconds 600
      - name: Get frontend from cache
        uses: actions/cache@v2
        with:
          path: frontend/dist
          key: ${{ github.sha }}
      - name: Move frontend dist
        run: |
          mv frontend/dist backend/static
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          platforms: ${{ env.DOCKER_TARGET_PLATFORM }}
          push: true
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}